model_12_11 <- ugarchfit(spec = model_1211, data = UNRATE_diff)
model_12_11
res_analysis(model_12_11@fit$residuals)
model_1264 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(4, 6)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_64 <- ugarchfit(spec = model_1264, data = UNRATE_diff)
model_12_64
res_analysis(model_12_64@fit$residuals)
AICs = c(infocriteria(model_12_10)[1], infocriteria(model_12_11)[1], infocriteria(model_12_20)[1], infocriteria(model_12_64)[1])
UN = data.frame(model = c("model_12_10", "model_12_11", "model_12_20", "model_12_64"))
UN$AIC = AICs
UN[order(UN$AIC, decreasing = TRUE), ]
AICs = c(infocriteria(model_12_10)[1], infocriteria(model_12_11)[1], infocriteria(model_12_64)[1])
BICs = c(infocriteria(model_12_10)[2], infocriteria(model_12_11)[2], infocriteria(model_12_64)[2])
UN = data.frame(model = c("model_12_10", "model_12_11", "model_12_64"))
UN$AIC = AICs
UN[order(UN$AIC, decreasing = TRUE), ]
UN$BIC = BICs
UN[order(UN$AIC, decreasing = TRUE), ]
UN[order(UN$BIC, decreasing = TRUE), ]
AICs = c(infocriteria(model_12_10)[1], infocriteria(model_12_11)[1], infocriteria(model_12_64)[1])
BICs = c(infocriteria(model_12_10)[2], infocriteria(model_12_11)[2], infocriteria(model_12_64)[2])
UN = data.frame(model = c("model_12_10", "model_12_11", "model_12_64"))
UN$AIC = AICs
UN$BIC = BICs
UN[order(UN$AIC, decreasing = TRUE), ]
UN[order(UN$BIC, decreasing = TRUE), ]
AICs = c(infocriteria(model_12_10)[1], infocriteria(model_12_11)[1], infocriteria(model_12_64)[1])
BICs = c(infocriteria(model_12_10)[2], infocriteria(model_12_11)[2], infocriteria(model_12_64)[2])
UN = data.frame(model = c("model_12_10", "model_12_11", "model_12_64"))
UN$AIC = AICs
UN$BIC = BICs
UN[order(UN$AIC), ]
UN[order(UN$BIC), ]
par(mfrow=c(1,1))
plot(model_12_10)
plot(model_12_10, which = 1)
UN_FUTURE = ugarchforecast(model_12_10, data = UNRATE_diff, n.ahead = 6)
plot(UN_FUTURE)
UN_FUTURE = ugarchforecast(model_12_10, data = UNRATE_diff, n.ahead = 6)
plot(UN_FUTURE)
knitr::opts_chunk$set(echo = TRUE)
library(TSA)
library(fUnitRoots)
library(forecast)
library(CombMSC)
library(lmtest)
library(fGarch)
library(rugarch)
library(tseries)
library(FitAR)
UNRATE <- read.csv("UNRAT.csv", header = TRUE)
UNRATE$DATE <- as.Date(UNRATE$DATE)
rownames(UNRATE) <- UNRATE$DATE
UNRATE <- within(UNRATE, rm(DATE))
UNRATE_TS <- ts(as.vector(as.matrix(t(UNRATE))), start = 1948, end = 2021)
# Function to plot a single data.
v_Plot <- function(v, m){
plot(v, type = "b", pch = 19, col = "blue", xlab = "years", ylab = "Unemployement Rate", main = m)
}
# Function to form a legend corresponding to a single data plot.
v_leg1 <- function(t, l, c, p){
legend("topright", inset = .03, title = t, legend = l, col = c, horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, box.col = "blue", pch = p)
}
v_Plot(UNRATE_TS, "Unemployement rate from 1948 to 2021")
v_leg1("Unemployement Rate over years.", c("Unemployement Rate"), c("blue"), c(19))
# Function to plot using two different data (Scatter Plot).
v_Plot1 <- function(v, v1, x, y, m){
plot(x = v, y = v1, pch = 19, col = "blue", xlab = x, ylab = y, main = m)
}
# Function to form a legend corresponding to a two data plot.
v_leg <- function(t, l){
legend("bottomright", inset = .03, title = t, legend = c(l), col = c("blue"), horiz = TRUE, cex = 0.8, box.lty = 2, box.lwd = 2, box.col = "blue", pch = c(19))
}
McLeod.Li.test(y = UNRATE_TS, main = "McLeod-Li Test Statistics for U.S unemployment rate")
# McLeod-Li test is significnat at 5% level of significance for all lags. This gives a strong idea about existence of volatiliy clustering.
acf(UNRATE_TS, main = "Unemployment rate - ACF")
pacf(UNRATE_TS, main = "Unemployment rate - PACF")
adfTest(UNRATE_TS)
UNRATE_TS_1 <-  BoxCox.ar(UNRATE_TS + 1)
title(main = "Log-likelihood vs Lambda values")
# Checking for Box_Cox transformation with best lambda
lambda = UNRATE_TS_1$lambda[which(max(UNRATE_TS_1$loglike) == UNRATE_TS_1$loglike)]
UNRATE_TS_BC = ((UNRATE_TS^lambda) - 1) / lambda
shapiro.test(UNRATE_TS_BC)
adfTest(UNRATE_TS_BC)
UNRATE_diff = diff(UNRATE_TS)
# Plot - First difference.
v_Plot(UNRATE_diff, "Differenced data of unemployment rate in U.S.")
v_leg("Differenced unemployment rate over the years.", c("First ever differenced data"))
adfTest(UNRATE_diff)
acf(UNRATE_diff, main = "Unemployment rate first difference data - ACF")
pacf(UNRATE_diff, main = "Unemployment rate first difference data - PACF")
#calculating the eacf
eacf(UNRATE_diff, ar.max = 6, ma.max = 9)
#creating the BIC plot
res = armasubsets(UNRATE_diff, nar = 9, nma = 9, y.name = 'ar', ar.method = 'ols')
plot(res)
title(main = "Unemployement Rate - BIC", line = 6)
# Function for residual analysis.
res_analysis <- function(res_m) {
# Scatter plot for model residuals
plot(res_m, type = "b", pch = 19, col = "blue", xlab = "years", ylab = "Standardized Residuals", main = "Plot of Residuals over Time")
abline(h = 0)
# Standard distribution
hist(res_m, xlab = 'Standardized Residuals', freq = FALSE, ylim = c(0, 0.6))
curve(dnorm(x, mean = mean(res_m), sd = sd(res_m)), col = "red", lwd = 2, add = TRUE, yaxt = "n")
# QQplot for model residuals
qqnorm(res_m, col = c("blue"))
qqline(res_m)
# Auto-Correlation Plot
acf(res_m, main = "ACF of Standardized Residuals",col=c("blue"))
# Shapiro wilk test
print(shapiro.test(res_m))
# Ljung box test
k=0
LBQPlot(res_m, lag.max = 30, StartLag = k + 1, k = 0, SquaredQ = FALSE)
}
model_01_ml = arima(UNRATE_diff,order=c(0,0,1),method='ML')
coeftest(model_01_ml)
res_analysis(rstandard(model_01_ml))
model_02_ml = arima(UNRATE_diff,order=c(0,0,2),method='ML')
coeftest(model_02_ml)
res_analysis(rstandard(model_02_ml))
model_03_ml = arima(UNRATE_diff,order=c(0,0,3),method='ML')
coeftest(model_03_ml)
res_analysis(rstandard(model_03_ml))
model_10_ml = arima(UNRATE_diff,order=c(1,0,0),method='ML')
coeftest(model_10_ml)
res_analysis(rstandard(model_10_ml))
model_11_ml = arima(UNRATE_diff,order=c(1,0,1),method='ML')
coeftest(model_11_ml)
res_analysis(rstandard(model_11_ml))
model_12_ml = arima(UNRATE_diff,order=c(1,0,2),method='ML')
coeftest(model_12_ml)
res_analysis(rstandard(model_12_ml))
model_13_ml = arima(UNRATE_diff,order=c(1,0,3),method='ML')
coeftest(model_13_ml)
res_analysis(rstandard(model_13_ml))
model_20_ml = arima(UNRATE_diff,order=c(2,0,0),method='ML')
coeftest(model_20_ml)
res_analysis(rstandard(model_20_ml))
model_21_ml = arima(UNRATE_diff,order=c(2,0,1),method='ML')
coeftest(model_21_ml)
res_analysis(rstandard(model_21_ml))
model_22_ml = arima(UNRATE_diff,order=c(2,0,2),method='ML')
coeftest(model_22_ml)
res_analysis(rstandard(model_22_ml))
model_23_ml = arima(UNRATE_diff,order=c(2,0,3),method='ML')
coeftest(model_23_ml)
res_analysis(rstandard(model_23_ml))
model_30_ml = arima(UNRATE_diff,order=c(3,0,0),method='ML')
coeftest(model_30_ml)
res_analysis(rstandard(model_30_ml))
model_32_ml = arima(UNRATE_diff,order=c(3,0,2),method='ML')
coeftest(model_32_ml)
res_analysis(rstandard(model_32_ml))
model_33_ml = arima(UNRATE_diff,order=c(3,0,3),method='ML')
coeftest(model_33_ml)
res_analysis(rstandard(model_33_ml))
model_34_ml = arima(UNRATE_diff,order=c(3,0,4),method='ML')
coeftest(model_34_ml)
res_analysis(rstandard(model_34_ml))
sc.AIC=AIC(model_01_ml, model_02_ml, model_03_ml, model_10_ml, model_11_ml, model_12_ml, model_13_ml, model_20_ml, model_21_ml, model_22_ml, model_23_ml, model_30_ml, model_32_ml, model_33_ml, model_34_ml)
sort.score <- function(x, score = c("bic", "aic")){
if (score == "aic"){
x[with(x, order(AIC)),]
} else if (score == "bic") {
x[with(x, order(BIC)),]
} else {
warning('score = "x" only accepts valid arguments ("aic","bic")')
}
}
sort.score(sc.AIC, score = "aic")
model_22_ml = arima(UNRATE_diff,order=c(2,0,2),method='ML')
coeftest(model_22_ml)
res_analysis(rstandard(model_22_ml))
model_13_ml = arima(UNRATE_diff,order=c(1,0,3),method='ML')
coeftest(model_13_ml)
res_analysis(rstandard(model_13_ml))
model_12_res = model_12_ml$residuals
model_12_abs = abs(model_12_res)
par(mfrow=c(1,2))
acf(model_12_abs, main = "The ACF plot for absolute residual series")
pacf(model_12_abs, main = "The PACF plot for absolute residual series")
eacf(model_12_abs, ar.max = 6, ma.max = 9)
res = armasubsets(model_12_abs, nar = 9, nma = 9, y.name = 'ar', ar.method = 'ols')
plot(res)
title(main = "Unemployment rate - BIC", line = 6)
model_12_sq = model_12_res ^ 2
par(mfrow=c(1,2))
acf(model_12_sq, main = "The ACF plot for squared residual series")
pacf(model_12_sq, main = "The PACF plot for squared residual series")
eacf(model_12_sq, ar.max = 6, ma.max = 9)
res = armasubsets(model_12_sq, nar = 9, nma = 9, y.name = 'ar', ar.method = 'ols')
plot(res)
title(main = "Unemployment rate - BIC", line = 6)
model_1210 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(0, 1)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_10 <- ugarchfit(spec = model_1210, data = UNRATE_diff)
model_12_10
res_analysis(model_12_10@fit$residuals)
model_1211 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_11 <- ugarchfit(spec = model_1211, data = UNRATE_diff)
model_12_11
res_analysis(model_12_11@fit$residuals)
model_1264 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(4, 6)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_64 <- ugarchfit(spec = model_1264, data = UNRATE_diff)
model_12_64
res_analysis(model_12_64@fit$residuals)
AICs = c(infocriteria(model_12_10)[1], infocriteria(model_12_11)[1], infocriteria(model_12_64)[1])
BICs = c(infocriteria(model_12_10)[2], infocriteria(model_12_11)[2], infocriteria(model_12_64)[2])
UN = data.frame(model = c("model_12_10", "model_12_11", "model_12_64"))
UN$AIC = AICs
UN$BIC = BICs
UN[order(UN$AIC), ]
UN[order(UN$BIC), ]
model_2210 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(0, 1)),
mean.model = list(armaOrder = c(2, 2), include.mean = FALSE),
distribution.model = "norm")
model_22_10 <- ugarchfit(spec = model_2210, data = UNRATE_diff)
model_22_10
res_analysis(model_22_10@fit$residuals)
model_1310 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(0, 1)),
mean.model = list(armaOrder = c(1, 3), include.mean = FALSE),
distribution.model = "norm")
model_13_10 <- ugarchfit(spec = model_1310, data = UNRATE_diff)
model_13_10
res_analysis(model_13_10@fit$residuals)
model_1220 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(0, 2)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_20 <- ugarchfit(spec = model_1220, data = UNRATE_diff)
model_12_20
res_analysis(model_12_20@fit$residuals)
model_1211 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_11 <- ugarchfit(spec = model_1211, data = UNRATE_diff)
model_12_11
res_analysis(model_12_11@fit$residuals)
par(mfrow=c(1,1))
plot(model_12_10)
plot(model_12_10, which = 1)
UN_FUTURE = ugarchforecast(model_12_10, data = UNRATE_diff, n.ahead = 6)
plot(UN_FUTURE)
plot(UN_FUTURE)
knitr::opts_chunk$set(echo = TRUE)
par(mfrow=c(1,1))
plot(model_12_10)
plot(model_12_10, which = 1)
UN_FUTURE = ugarchforecast(model_12_10, data = UNRATE_diff, n.ahead = 6)
plot(UN_FUTURE)
v_Plot(UN_FUTURE)
v_Plot(UN_FUTURE, "Forecast for next 6 years")
knitr::opts_chunk$set(echo = TRUE)
library(TSA)
library(fUnitRoots)
library(forecast)
library(CombMSC)
library(lmtest)
library(fGarch)
library(rugarch)
library(tseries)
library(FitAR)
UNRATE <- read.csv("UNRAT.csv", header = TRUE)
UNRATE$DATE <- as.Date(UNRATE$DATE)
rownames(UNRATE) <- UNRATE$DATE
UNRATE <- within(UNRATE, rm(DATE))
UNRATE_TS <- ts(as.vector(as.matrix(t(UNRATE))), start = 1948, end = 2021)
# Function to plot a single data.
v_Plot <- function(v, m){
plot(v, type = "b", pch = 19, col = "blue", xlab = "years", ylab = "Unemployement Rate", main = m)
}
# Function to form a legend corresponding to a single data plot.
v_leg1 <- function(t, l, c, p){
legend("topright", inset = .03, title = t, legend = l, col = c, horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, box.col = "blue", pch = p)
}
v_Plot(UNRATE_TS, "Unemployement rate from 1948 to 2021")
v_leg1("Unemployement Rate over years.", c("Unemployement Rate"), c("blue"), c(19))
McLeod.Li.test(y = UNRATE_TS, main = "McLeod-Li Test Statistics for U.S unemployment rate")
# McLeod-Li test is significnat at 5% level of significance for all lags. This gives a strong idea about existence of volatiliy clustering.
acf(UNRATE_TS, main = "Unemployment rate - ACF")
pacf(UNRATE_TS, main = "Unemployment rate - PACF")
adfTest(UNRATE_TS)
UNRATE_TS_1 <-  BoxCox.ar(UNRATE_TS + 1)
title(main = "Log-likelihood vs Lambda values")
# Checking for Box_Cox transformation with best lambda
lambda = UNRATE_TS_1$lambda[which(max(UNRATE_TS_1$loglike) == UNRATE_TS_1$loglike)]
UNRATE_TS_BC = ((UNRATE_TS^lambda) - 1) / lambda
shapiro.test(UNRATE_TS_BC)
adfTest(UNRATE_TS_BC)
UNRATE_diff = diff(UNRATE_TS)
# Plot - First difference.
v_Plot(UNRATE_diff, "Differenced data of unemployment rate in U.S.")
v_leg("Differenced unemployment rate over the years.", c("First ever differenced data"))
knitr::opts_chunk$set(echo = TRUE)
library(TSA)
library(fUnitRoots)
library(forecast)
library(CombMSC)
library(lmtest)
library(fGarch)
library(rugarch)
library(tseries)
library(FitAR)
UNRATE <- read.csv("UNRAT.csv", header = TRUE)
UNRATE$DATE <- as.Date(UNRATE$DATE)
rownames(UNRATE) <- UNRATE$DATE
UNRATE <- within(UNRATE, rm(DATE))
UNRATE_TS <- ts(as.vector(as.matrix(t(UNRATE))), start = 1948, end = 2021)
# Function to plot a single data.
v_Plot <- function(v, m){
plot(v, type = "b", pch = 19, col = "blue", xlab = "years", ylab = "Unemployement Rate", main = m)
}
# Function to form a legend corresponding to a single data plot.
v_leg1 <- function(t, l, c, p){
legend("topright", inset = .03, title = t, legend = l, col = c, horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, box.col = "blue", pch = p)
}
v_Plot(UNRATE_TS, "Unemployement rate from 1948 to 2021")
v_leg1("Unemployement Rate over years.", c("Unemployement Rate"), c("blue"), c(19))
# Function to plot using two different data (Scatter Plot).
v_Plot1 <- function(v, v1, x, y, m){
plot(x = v, y = v1, pch = 19, col = "blue", xlab = x, ylab = y, main = m)
}
# Function to form a legend corresponding to a two data plot.
v_leg <- function(t, l){
legend("bottomright", inset = .03, title = t, legend = c(l), col = c("blue"), horiz = TRUE, cex = 0.8, box.lty = 2, box.lwd = 2, box.col = "blue", pch = c(19))
}
McLeod.Li.test(y = UNRATE_TS, main = "McLeod-Li Test Statistics for U.S unemployment rate")
# McLeod-Li test is significnat at 5% level of significance for all lags. This gives a strong idea about existence of volatiliy clustering.
acf(UNRATE_TS, main = "Unemployment rate - ACF")
pacf(UNRATE_TS, main = "Unemployment rate - PACF")
adfTest(UNRATE_TS)
UNRATE_TS_1 <-  BoxCox.ar(UNRATE_TS + 1)
title(main = "Log-likelihood vs Lambda values")
# Checking for Box_Cox transformation with best lambda
lambda = UNRATE_TS_1$lambda[which(max(UNRATE_TS_1$loglike) == UNRATE_TS_1$loglike)]
UNRATE_TS_BC = ((UNRATE_TS^lambda) - 1) / lambda
shapiro.test(UNRATE_TS_BC)
adfTest(UNRATE_TS_BC)
UNRATE_diff = diff(UNRATE_TS)
# Plot - First difference.
v_Plot(UNRATE_diff, "Differenced data of unemployment rate in U.S.")
v_leg("Differenced unemployment rate over the years.", c("First ever differenced data"))
adfTest(UNRATE_diff)
acf(UNRATE_diff, main = "Unemployment rate first difference data - ACF")
pacf(UNRATE_diff, main = "Unemployment rate first difference data - PACF")
#calculating the eacf
eacf(UNRATE_diff, ar.max = 6, ma.max = 9)
#creating the BIC plot
res = armasubsets(UNRATE_diff, nar = 9, nma = 9, y.name = 'ar', ar.method = 'ols')
plot(res)
title(main = "Unemployement Rate - BIC", line = 6)
# Function for residual analysis.
res_analysis <- function(res_m) {
# Scatter plot for model residuals
plot(res_m, type = "b", pch = 19, col = "blue", xlab = "years", ylab = "Standardized Residuals", main = "Plot of Residuals over Time")
abline(h = 0)
# Standard distribution
hist(res_m, xlab = 'Standardized Residuals', freq = FALSE, ylim = c(0, 0.6))
curve(dnorm(x, mean = mean(res_m), sd = sd(res_m)), col = "red", lwd = 2, add = TRUE, yaxt = "n")
# QQplot for model residuals
qqnorm(res_m, col = c("blue"))
qqline(res_m)
# Auto-Correlation Plot
acf(res_m, main = "ACF of Standardized Residuals",col=c("blue"))
# Shapiro wilk test
print(shapiro.test(res_m))
# Ljung box test
k=0
LBQPlot(res_m, lag.max = 30, StartLag = k + 1, k = 0, SquaredQ = FALSE)
}
model_01_ml = arima(UNRATE_diff,order=c(0,0,1),method='ML')
coeftest(model_01_ml)
res_analysis(rstandard(model_01_ml))
model_02_ml = arima(UNRATE_diff,order=c(0,0,2),method='ML')
coeftest(model_02_ml)
res_analysis(rstandard(model_02_ml))
model_03_ml = arima(UNRATE_diff,order=c(0,0,3),method='ML')
coeftest(model_03_ml)
res_analysis(rstandard(model_03_ml))
model_10_ml = arima(UNRATE_diff,order=c(1,0,0),method='ML')
coeftest(model_10_ml)
res_analysis(rstandard(model_10_ml))
model_11_ml = arima(UNRATE_diff,order=c(1,0,1),method='ML')
coeftest(model_11_ml)
res_analysis(rstandard(model_11_ml))
model_12_ml = arima(UNRATE_diff,order=c(1,0,2),method='ML')
coeftest(model_12_ml)
res_analysis(rstandard(model_12_ml))
model_13_ml = arima(UNRATE_diff,order=c(1,0,3),method='ML')
coeftest(model_13_ml)
res_analysis(rstandard(model_13_ml))
model_20_ml = arima(UNRATE_diff,order=c(2,0,0),method='ML')
coeftest(model_20_ml)
res_analysis(rstandard(model_20_ml))
model_21_ml = arima(UNRATE_diff,order=c(2,0,1),method='ML')
coeftest(model_21_ml)
res_analysis(rstandard(model_21_ml))
model_22_ml = arima(UNRATE_diff,order=c(2,0,2),method='ML')
coeftest(model_22_ml)
res_analysis(rstandard(model_22_ml))
model_23_ml = arima(UNRATE_diff,order=c(2,0,3),method='ML')
coeftest(model_23_ml)
res_analysis(rstandard(model_23_ml))
model_30_ml = arima(UNRATE_diff,order=c(3,0,0),method='ML')
coeftest(model_30_ml)
res_analysis(rstandard(model_30_ml))
model_32_ml = arima(UNRATE_diff,order=c(3,0,2),method='ML')
coeftest(model_32_ml)
res_analysis(rstandard(model_32_ml))
model_33_ml = arima(UNRATE_diff,order=c(3,0,3),method='ML')
coeftest(model_33_ml)
res_analysis(rstandard(model_33_ml))
model_34_ml = arima(UNRATE_diff,order=c(3,0,4),method='ML')
coeftest(model_34_ml)
res_analysis(rstandard(model_34_ml))
sc.AIC=AIC(model_01_ml, model_02_ml, model_03_ml, model_10_ml, model_11_ml, model_12_ml, model_13_ml, model_20_ml, model_21_ml, model_22_ml, model_23_ml, model_30_ml, model_32_ml, model_33_ml, model_34_ml)
sort.score <- function(x, score = c("bic", "aic")){
if (score == "aic"){
x[with(x, order(AIC)),]
} else if (score == "bic") {
x[with(x, order(BIC)),]
} else {
warning('score = "x" only accepts valid arguments ("aic","bic")')
}
}
sort.score(sc.AIC, score = "aic")
model_22_ml = arima(UNRATE_diff,order=c(2,0,2),method='ML')
coeftest(model_22_ml)
res_analysis(rstandard(model_22_ml))
model_13_ml = arima(UNRATE_diff,order=c(1,0,3),method='ML')
coeftest(model_13_ml)
res_analysis(rstandard(model_13_ml))
model_12_res = model_12_ml$residuals
model_12_abs = abs(model_12_res)
par(mfrow=c(1,2))
acf(model_12_abs, main = "The ACF plot for absolute residual series")
pacf(model_12_abs, main = "The PACF plot for absolute residual series")
eacf(model_12_abs, ar.max = 6, ma.max = 9)
res = armasubsets(model_12_abs, nar = 9, nma = 9, y.name = 'ar', ar.method = 'ols')
plot(res)
title(main = "Unemployment rate - BIC", line = 6)
model_12_sq = model_12_res ^ 2
par(mfrow=c(1,2))
acf(model_12_sq, main = "The ACF plot for squared residual series")
pacf(model_12_sq, main = "The PACF plot for squared residual series")
eacf(model_12_sq, ar.max = 6, ma.max = 9)
res = armasubsets(model_12_sq, nar = 9, nma = 9, y.name = 'ar', ar.method = 'ols')
plot(res)
title(main = "Unemployment rate - BIC", line = 6)
model_1210 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(0, 1)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_10 <- ugarchfit(spec = model_1210, data = UNRATE_diff)
model_12_10
res_analysis(model_12_10@fit$residuals)
model_1211 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_11 <- ugarchfit(spec = model_1211, data = UNRATE_diff)
model_12_11
res_analysis(model_12_11@fit$residuals)
model_1264 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(4, 6)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_64 <- ugarchfit(spec = model_1264, data = UNRATE_diff)
model_12_64
res_analysis(model_12_64@fit$residuals)
AICs = c(infocriteria(model_12_10)[1], infocriteria(model_12_11)[1], infocriteria(model_12_64)[1])
BICs = c(infocriteria(model_12_10)[2], infocriteria(model_12_11)[2], infocriteria(model_12_64)[2])
UN = data.frame(model = c("model_12_10", "model_12_11", "model_12_64"))
UN$AIC = AICs
UN$BIC = BICs
UN[order(UN$AIC), ]
UN[order(UN$BIC), ]
model_2210 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(0, 1)),
mean.model = list(armaOrder = c(2, 2), include.mean = FALSE),
distribution.model = "norm")
model_22_10 <- ugarchfit(spec = model_2210, data = UNRATE_diff)
model_22_10
res_analysis(model_22_10@fit$residuals)
model_1310 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(0, 1)),
mean.model = list(armaOrder = c(1, 3), include.mean = FALSE),
distribution.model = "norm")
model_13_10 <- ugarchfit(spec = model_1310, data = UNRATE_diff)
model_13_10
res_analysis(model_13_10@fit$residuals)
model_1220 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(0, 2)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_20 <- ugarchfit(spec = model_1220, data = UNRATE_diff)
model_12_20
res_analysis(model_12_20@fit$residuals)
model_1211 <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(1, 2), include.mean = FALSE),
distribution.model = "norm")
model_12_11 <- ugarchfit(spec = model_1211, data = UNRATE_diff)
model_12_11
res_analysis(model_12_11@fit$residuals)
UN_FUTURE = ugarchforecast(model_12_10, data = UNRATE_diff, n.ahead = 6)
v_Plot(UN_FUTURE, "Forecast for next 6 years")
plot(forc)
UN_FUTURE = ugarchforecast(model_12_10, data = UNRATE_diff, n.ahead = 6)
v_Plot(UN_FUTURE, "Forecast for next 6 years")
